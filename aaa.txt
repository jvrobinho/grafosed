if(!g)return 0;
if(!g->prim)return 0;
TNO * aux = buscaNo(g,elem);
int corAux = 2;
limpaPassou(g);//limpa as cores e o passou;
while(aux){
  if(aux->cor2==0){
    pintaPassou(g,aux,corAux);
    corAux++;// aumenta o valor da cor
    g->numCores++;// aumenta o numero de cores
  }
  aux= aux->prox_no;
}
int num  = g->numCores;
TNO * art = buscaNo(g,elem);
limpaPassou(g); // limpa o passou e as cores
marcaPassou(g,(int)art->id_no,1); // marca com 1 o elemento que vai ser eliminado.

g->numCores=0;// zera o numero de cores
TNO * no = g->prim;
int cor = 2;// seta a primeira cor a partir de 2
while(no){
  if(no->cor2 == 0 && art != no){
    pintaPassou(g,no,cor); /// pinta com a cor que tá no looping
    cor++;// aumenta o valor da cor
    g->numCores++;// aumenta o numero de cores
  }
  no = no->prox_no;

}
if(g->numCores<num)return 1;
return 0;



void pintaPassou(TG * g, TNO * no,int cor){
    // função que pinta, com backtracking
    // função que pode dar merda
    no->cor2 = cor;
    TViz * art = no->prim_viz;
    marcaPassou(g,no->id_no,1);
    while(art){
      if(art->passou == 0){
          TNO*noArt = buscaNo(g,art->id_viz);
        if(noArt->cor == 0){
          pintaPassou(g,noArt,cor);
        }
      }
      art = art->prox_viz;
    }
    return;

}


//



void limpaPassou(TG*g){ // função que zera o passou e as cores2
  g->numCores = 1;
  TNO * no = g->prim;
  while(no){
    TViz * ar = no->prim_viz;
    while(ar){
      ar->passou = 0;
      ar = ar->prox_viz;
    }
    no->cor=0;
    no = no->prox_no;

  }
}

TNO * marcaPassou(TG * g, int elem, int i){
// função para marcar onde já foi passado. Feita para marcar o ponto a ser ignorado na articulação.
  TNO * no = g->prim;
  while(no){
    TViz * ar = no->prim_viz;
    while(ar){
      if (ar->id_viz==elem){
        ar->passou = i;
      }
    }
  }
  return no;
}



void pintaPassou(TG * g, int id_no){
    // função que pinta, com backtracking
    // função que pode dar merda
    if(!g) return;
    int cor = g->numCores;
    TNO * no1 = buscaNo(g, id_no);
    if(!no1) return;
    if(!no1->cor) no1->cor = cor;
    TViz * a = no1->prim_viz;
    while(a){
      TNO * viz = buscaNo(g,a->id_viz);
      if(procuraCaminho(g,no1->id_no,viz->id_no) && procuraCaminho(g,viz->id_no,no1->id_no) )
        if(!viz->cor && a->passou==0){
          viz->cor = cor;
          pintaPassou(g,a->id_viz);
        }
        a->passou=1;
      a=a->prox_viz;
    }
    return;

}
int pontoDeArticulacao(TG * g, int elem){
  if(!g)return 0;
  if(!g->prim)return 0;
  TNO * non = marcaPassou(g,elem,1);
  TNO * no = g->prim;

  while(no){
    if(no!=non){
      pintaPassou(g,elem);

    }
    no = no->prox_no;
  }
